"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _angular=require("angular"),_angular2=_interopRequireDefault(_angular),InspectorController=function e(){_classCallCheck(this,e);var t=Object.keys.bind(Object),n=_angular2["default"].isObject.bind(_angular2["default"]),l=_angular2["default"].isArray.bind(_angular2["default"]);_angular2["default"].extend(this,{keys:t,isObject:n,isArray:l,typeOf:function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()},isEmpty:function(e){return l(e)&&0===e.length||n(e)&&0===t(e).length}})};exports["default"]=_angular2["default"].module("rd-inspect-object",[]).directive("rdInspectObject",function(){return{controllerAs:"ctrl",bindToController:!0,scope:{value:"="},restrict:"E",templateUrl:"inspect-object.html",controller:InspectorController}}).directive("rdInspectObjectElement",["RecursionHelper",function(e){return{controllerAs:"ctrl",bindToController:!0,scope:{object:"=",key:"=",value:"="},restrict:"E",templateUrl:"inspect-object-element.html",compile:e.compile.bind(e),controller:function(e){function t(){_classCallCheck(this,t);var e=_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this));return _angular2["default"].extend(e,{state:{open:!1}}),e}return _inherits(t,e),t}(InspectorController)}}]).factory("RecursionHelper",["$compile",function(e){return{compile:function(t,n){n=_angular2["default"].isFunction(n)?{post:n}:n;var l,r=t.contents().remove();return{pre:n&&n.pre?n.pre:null,post:function(t,c){(l=l||e(r))(t,function(e){return c.append(e)}),n&&n.post&&n.post.apply(null,arguments)}}}}}]),_angular2["default"].module("rd-inspect-object").run(["$templateCache",function(e){e.put("inspect-object-element.html",'<span\n  class="key"\n  ng-if="!ctrl.isArray(ctrl.object)"\n  ng-click="ctrl.state.open = !ctrl.state.open; $event.stopPropagation();"\n  ng-class="{\n    open:      ctrl.state.open,\n    closed:    !ctrl.state.open,\n    populated: !ctrl.isEmpty(ctrl.value),\n    empty:     ctrl.isEmpty(ctrl.value),\n    object:    ctrl.isObject(ctrl.value)\n  }"\n>\n  {{ ctrl.key }}<span class="marker">:</span>\n</span>\n<span ng-if="!ctrl.isObject(ctrl.value)" class="value" ng-class="ctrl.typeOf(ctrl.value)">{{ ctrl.value | json }}</span>\n<span ng-if="ctrl.isObject(ctrl.value)">\n  <span class="brace" ng-bind="ctrl.isArray(ctrl.value) && \'[\' || \'{\'"></span>\n  <span\n    ng-if="!ctrl.state.open && !ctrl.isEmpty(ctrl.value)"\n    ng-click="ctrl.state.open = true;\n    $event.stopPropagation();"\n  > &#8230 </span>\n  <ol ng-if="ctrl.state.open && !ctrl.isEmpty(ctrl.value)" class="value object">\n    <li ng-repeat="(key, value) in ctrl.value">\n      <rd-inspect-object-element\n        object="ctrl.value"\n        key="key"\n        value="value"\n      ></rd-inspect-object-element>\n    </li>\n  </ol>\n  <span class="brace" ng-bind="ctrl.isArray(ctrl.value) && \']\' || \'}\'">}</span>\n</span>'),e.put("inspect-object.html",'<div>\n  <span ng-if="!ctrl.isObject(ctrl.value)" class="value" ng-class="ctrl.typeOf(value)">\n    {{ value | json }}\n  </span>\n  <div ng-if="ctrl.isObject(ctrl.value)">\n    <ol class="value object">\n      <li ng-repeat="(key, val) in ctrl.value">\n        <rd-inspect-object-element\n          object="ctrl.value"\n          key="key"\n          value="val"\n        ></rd-inspect-object-element>\n      </li>\n    </ol>\n  </div>\n</div>\n')}]);